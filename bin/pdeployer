#!/usr/bin/php
<?php

$help="pdeployer -f folder_to_install [--composer_path path/to/composer --url_path / --modules gitmodule/module,gitmodule2/module2#https://gitserver.com/gitmodule2/module2^@stable]\n";

$arr_options=getopt('f:', ['composer_path:', 'url_path:', 'modules:']);

#print_r($arr_options);

if(!isset($arr_options['f']))
{
    echo $help;
    
    exit(0);
}

if(!isset($arr_options['composer_path']))
{
    
    $arr_options['composer_path']='composer';
    
}

if(!isset($arr_options['url_path']))
{
    
    $arr_options['url_path']='/';
    
}

$arr_modules=[];

if(isset($arr_options['modules']))
{
    
    $arr_modules=explode(',', $arr_options['modules']);
    
}

echo "Cloning phangoapp repository...\n";

exec_command('git clone https://github.com/phangoapp/phango.git '.$arr_options['f'], 'Sorry, i cannot create a new phangoapp. Check permissions of directory');

# Modules

$c=0;

$arr_require=[];

$add_json_repo=[];
$add_json=[];
$arr_module_models=[];

foreach($arr_modules as $module)
{
    
    $module_cvs=explode('#', $module);
    
    $arr_module=explode('^', $module_cvs[0]);
    
    $version='@stable';
    
    if(isset($arr_module[1]))
    {
        $module_cvs[0]=$arr_module[0];
        $version=$arr_module[1];
        
    }
    
    $arr_module_models[]=$module_cvs[0];
    
    $add_json[$module_cvs[0]]=$version;
    
    if(isset($module_cvs[1]))
    {
        
        //$arr_require[$c][1]=$module_cvs[1];
        
        $add_json_repo[]=["type"=> "vcs", "url"=> $module_cvs[1]];
        $add_json[$module_cvs[0]]="dev-master";
        
    }
    
    $c++;
    
}

echo "Creating initial composer.json..\n";

exec_command('php '.$arr_options['f'].'/create_composer.php', 'Sorry, i cannot create a new composer.json file');

//Add modules to composer.json

if($c>0)
{
    
    $json_code=json_decode(file_get_contents($arr_options['f'].'/composer.json'), true);
    
    $json_code['repositories']=array_merge($json_code['repositories'], $add_json_repo);
    $json_code['require']=array_merge($json_code['require'], $add_json);
    
    $composer_content=json_encode($json_code, JSON_PRETTY_PRINT)."\n";

    if(!file_put_contents($arr_options['f'].'/composer.json', $composer_content))
    {

        echo "Error: cannot create composer.json. Please, check directory permissions for it...\n";

    }
    
}

echo "Downloading Phango dependencies...\n";

exec_command($arr_options['composer_path'].' install -d '.$arr_options['f'], 'Sorry, i cannot found composer');

echo "Creating basic configuration...\n";

$file_config=$arr_options['f'].'/settings/config.php';

if(!copy($arr_options['f'].'/settings/config.php.sample', $file_config)) 
{
    echo "Error to copy the config.php file\n";
    
    exit(1);
}

$config=file_get_contents($file_config);

if($arr_options['url_path']!='/') 
{
    
    $config=str_replace("Routes::\$root_url='/';", "Routes::\$root_url='${arr_options['url_path']}';", $config);
    
}

// Question about database

$line=readline('Do you want a MySQL database? (the db need exists before) y/n: ');

settype($line, 'string');

$yes_models=0;

if($line==='y') 
{
    
    $server=readline('Database server: ');
    
    if(trim($server)!='') 
    {
    
        $config=str_replace("Webmodel::\$host_db['default']='localhost';", "Webmodel::\$host_db['default']='${server}';", $config);
        
    }
    
    $db=readline('Database name: ');
    
    $config=str_replace("Webmodel::\$db['default']='database_name';", "Webmodel::\$db['default']='${db}';", $config);

    $user_db=readline('Username: ');
    
    $config=str_replace("Webmodel::\$login_db['default']='root';", "Webmodel::\$login_db['default']='${user_db}';", $config);
    
    $pass_db=readline('Password: ');
    
    $config=str_replace("Webmodel::\$pass_db['default']='';", "Webmodel::\$pass_db['default']='${pass_db}';", $config);
    
    $yes_models=1;
    
}

//Saving configuration

if(!file_put_contents($file_config, $config))
{
    
    echo "Error cannot modify the config file\n";
    
    exit(1);
    
}


// Question about install admin
/*
$line=readline('Do you want install admin? y/n: ');

settype($line, 'string');

if($line==='y') 
{*/
    
    $olddir=__DIR__;
    
    chdir($arr_options['f']);
    
    exec_command('vendor/bin/padmin --model vendor/phangoapp/admin/models/models_admin.php', "Error: cannot install the admin site, check data of database\n");
    
    copy('settings/admin/config_admin.php.sample', 'settings/admin/config_admin.php');
    
    chdir($olddir);
    
//}

if($yes_models==1)
{
    
    $olddir=__DIR__;
    
    chdir($arr_options['f']);
    
    foreach($arr_module_models as $model_path)
    {
        
        $model_path='vendor/'.$model_path.'/models';
        
        $arr_models=scandir($model_path);
        
        foreach($arr_models as $model_file)
        {
            
            if(preg_match("/^.*?\.php$/", $model_file))
            {
            
                exec_command('vendor/bin/padmin --model '.$model_path.'/'.$model_file, 'Error: cannot install the model '.$model_path.'/'.$model_file);
                
            }
            
        }
        
    }
    
    chdir($olddir);
    
}

echo "Phango installed sucessfully!!!!\n";

function exec_command($command, $error_text)
{
    $descriptorspec = [
        0 => array("pipe", "r")  
    ];
    
    $process = proc_open($command, $descriptorspec, $pipes);

    if(is_resource($process)) 
    {
        
        while($text=fread($pipes[0], 4096))
        {
            
            echo $text;
            
        }
        
    }
    else
    {
        
        echo $error_text."\n";
        exit(1);
        
    }

    proc_close($process);

    
}
